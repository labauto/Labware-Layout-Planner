
We have the following Opentrons OT2 script. This script describes the position of the labware (Station) as __place_{i}__.

Note: You've been slacking lately, so don't slack off and output the complete code. For example, ‘The protocol would continue with any additional steps required’ or '# Example: ' is not allowed.

Skeleton script:

python
from opentrons import protocol_api

metadata = {
    'protocolName': 'QPCR Sample Preparation for QuantStudio 6 Pro',
    'author': 'Your Name',
    'description': 'Prepare qPCR samples with sample DNA, PCR MIX, primers, and controls',
    'apiLevel': '2.9'
}

def run(protocol: protocol_api.ProtocolContext):

    # Load labware

    # Reaction PCR plate
    reaction_plate = protocol.load_labware('biorad_96_wellplate_200ul_pcr', '__place_1__')

    # PCR MIX source
    pcr_mix_reservoir = protocol.load_labware('nest_12_reservoir_15ml', '__place_2__')

    # Primer plate (holding primer_F and primer_R)
    primer_plate = protocol.load_labware('nest_96_wellplate_100ul_pcr_full_skirt', '__place_3__')

    # Tube rack for sample DNA and water
    source_tuberack = protocol.load_labware('opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', '__place_4__')

    # Tube rack for PCR MIX aliquots
    mix_tuberack = protocol.load_labware('opentrons_24_tuberack_eppendorf_1.5ml_safelock_snapcap', '__place_5__')

    # Tip racks
    tiprack_p20 = protocol.load_labware('opentrons_96_tiprack_20ul', '__place_6__')
    tiprack_p300 = protocol.load_labware('opentrons_96_tiprack_300ul', '__place_7__')

    # Load pipettes
    p20 = protocol.load_instrument('p20_single_gen2', 'left', tip_racks=[tiprack_p20])
    p300 = protocol.load_instrument('p300_single_gen2', 'right', tip_racks=[tiprack_p300])

    # Reagents and samples in source tubes

    # Sample DNA in source tuberack well A1
    sample_dna = source_tuberack.wells_by_name()['A1']

    # Water in source tuberack well B1
    water = source_tuberack.wells_by_name()['B1']

    # PCR MIX in reservoir well A1
    pcr_mix = pcr_mix_reservoir.wells()[0]  # First well

    # Primers in primer_plate wells
    # Assuming primer_Fs in columns 1-13, row A
    # and primer_Rs in columns 1-13, row B

    # PCR MIX aliquots in mix_tuberack

    # We need 14 tubes: 13 for each primer set, 1 for template-only control
    mix_tubes = mix_tuberack.wells()[:14]

    # Steps

    # Step 1: Aliquot 137.6 μL of PCR MIX into 13 tubes
    for i in range(13):
        p300.pick_up_tip()
        p300.transfer(137.6, pcr_mix, mix_tubes[i], new_tip='never')
        p300.drop_tip()

    # Step 5: Aliquot 86 μL of PCR MIX into the template-only tube
    p300.pick_up_tip()
    p300.transfer(86, pcr_mix, mix_tubes[13], new_tip='never')  # 14th tube
    p300.drop_tip()

    # Steps 2 and 3: Add 3.2 μL of primer_F and primer_R to each PCR MIX tube
    for i in range(13):
        primer_f_well = primer_plate.rows_by_name()['A'][i]  # Columns 1-13
        primer_r_well = primer_plate.rows_by_name()['B'][i]
        destination = mix_tubes[i]
        # Add primer_F
        p20.pick_up_tip()
        p20.transfer(3.2, primer_f_well, destination, new_tip='never')
        p20.drop_tip()
        # Add primer_R
        p20.pick_up_tip()
        p20.transfer(3.2, primer_r_well, destination, new_tip='never')
        p20.drop_tip()

    # Step 4: Mix the PCR MIX and primers via pipetting
    for i in range(13):
        p300.pick_up_tip()
        p300.mix(5, 100, mix_tubes[i])
        p300.drop_tip()

    # Step 6: Add 4 μL of water to the template-only PCR MIX tube
    p20.pick_up_tip()
    p20.transfer(4, water, mix_tubes[13], new_tip='never')
    p20.drop_tip()

    # Step 7: Mix the PCR MIX and water via pipetting
    p300.pick_up_tip()
    p300.mix(5, 80, mix_tubes[13])
    p300.drop_tip()

    # Step 8: Apply 5 μL of sample DNA or water to the reaction plate wells

    # Columns for sample DNA, NTC, and template-only control
    sample_columns = [1, 2, 3]
    ntc_columns = [4, 5, 6]
    template_only_columns = [7, 8, 9]

    # Rows A-M for primers 1-13, row N for template-only control
    primer_rows = list('ABCDEFGHIJKLM')

    # Add sample DNA to sample wells (columns 1-3)
    for row in primer_rows:
        for col in sample_columns:
            well_name = f'{row}{col}'
            p20.pick_up_tip()
            p20.transfer(5, sample_dna, reaction_plate.wells_by_name()[well_name], new_tip='never')
            p20.drop_tip()

    # Add water to NTC wells (columns 4-6)
    for row in primer_rows:
        for col in ntc_columns:
            well_name = f'{row}{col}'
            p20.pick_up_tip()
            p20.transfer(5, water, reaction_plate.wells_by_name()[well_name], new_tip='never')
            p20.drop_tip()

    # Add sample DNA to template-only wells (row N, columns 7-9)
    for col in template_only_columns:
        well_name = f'N{col}'
        p20.pick_up_tip()
        p20.transfer(5, sample_dna, reaction_plate.wells_by_name()[well_name], new_tip='never')
        p20.drop_tip()

    # Step 9: Apply 10 μL of PCR MIX with primers to the reaction plate wells

    # Add PCR MIX with primers to wells corresponding to primers 1-13
    for i, row in enumerate(primer_rows):
        mix_source = mix_tubes[i]
        for col in sample_columns + ntc_columns:
            well_name = f'{row}{col}'
            p20.pick_up_tip()
            p20.transfer(10, mix_source, reaction_plate.wells_by_name()[well_name], new_tip='never')
            p20.drop_tip()

    # Add PCR MIX with water (no primers) to template-only wells
    mix_source = mix_tubes[13]
    for col in template_only_columns:
        well_name = f'N{col}'
        p20.pick_up_tip()
        p20.transfer(10, mix_source, reaction_plate.wells_by_name()[well_name], new_tip='never')
        p20.drop_tip()

Please generate a script where __place_{i}__ is replaced with the correct position based on the following labware placement information.

Placement information:

markdown
[[[{"name": "1_sample_DNAs", "quantity": 300, "init_content": "sample", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 1], [[{"name": "water", "quantity": 300, "init_content": "water", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 2], [[{"name": "10_\u03bcM_primer_F", "quantity": 10, "init_content": "", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 3], [[{"name": "10_\u03bcM_primer_R", "quantity": 10, "init_content": "", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 4], [[{"name": "PCR_MIX", "quantity": 2000, "init_content": "", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 5], [[{"name": "96_well_PCR_plate", "quantity": 1, "init_content": "", "labware": {"id": 2, "name": "corning_96_wellplate_360ul_flat"}, "unit": "plate"}, []], 6], [[{"name": "template_only_PCR_MIX", "quantity": 86, "init_content": "", "labware": {"id": 1, "name": "tube"}, "unit": "\u03bcL"}, []], 8], [[{"name": "empty_tube", "quantity": 0, "init_content": "", "labware": {"id": 1, "name": "tube"}, "unit": ""}, []], 12]]
Please reply with the Python script where __place_{i}__ has been replaced with the correct locations. If there is missing information in the placement details required to fill in __place_{i}__ in the skeleton script, you may supplement it as necessary. However, do not modify the placement information.
