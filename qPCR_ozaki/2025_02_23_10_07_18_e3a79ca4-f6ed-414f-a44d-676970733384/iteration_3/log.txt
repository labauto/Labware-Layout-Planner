***2025-02-23 02:00:06.025582+00:00***: os.path.join(BASE_DIR, f'{id}')='qPCR_ozaki/2025_02_23_10_07_18_e3a79ca4-f6ed-414f-a44d-676970733384/iteration_3'***2025-02-23 02:00:06.026351+00:00***: *********************** 2025_02_23_10_07_18_e3a79ca4-f6ed-414f-a44d-676970733384/iteration_3 *****************************2025-02-23 02:00:06.026667+00:00***: *********************************************************2025-02-23 02:00:11.814618+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {
        "id": 3,
        "name": "Unknown"
      }
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in 1.5 mL tubes and contains the initial content "sample DNAs".
2. water - It is used in 1.5 mL tubes and contains the initial content "water".
3. 10 μM primer_F - It is used in 1.5 mL tubes and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in 1.5 mL tubes and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in 1.5 mL tubes and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the 1.5 mL tubes and unknown labware have been set as "Unknown" since no specific ID and name are provided in the available labware list.***2025-02-23 02:00:11.816271+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {
        "id": 1,
        "name": "1.5 mL tube"
      }
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {
        "id": 3,
        "name": "Unknown"
      }
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in 1.5 mL tubes and contains the initial content "sample DNAs".
2. water - It is used in 1.5 mL tubes and contains the initial content "water".
3. 10 μM primer_F - It is used in 1.5 mL tubes and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in 1.5 mL tubes and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in 1.5 mL tubes and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the 1.5 mL tubes and unknown labware have been set as "Unknown" since no specific ID and name are provided in the available labware list.***2025-02-23 02:00:11.817179+00:00***: Attempt 1 failed with error: Extra data: line 66 column 1 (char 1184)***2025-02-23 02:00:11.818764+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 66 column 1 (char 1184)
***2025-02-23 02:00:11.819354+00:00***: Retrying... (Attempt 1/10)***2025-02-23 02:00:18.397704+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "plate",
      "init_content": "",
      "labware": {"id": 2, "name": "PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in a tube and contains the initial content "sample DNAs".
2. water - It is used in a tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the tubes is set as "Unknown" since no specific ID and name are provided in the available labware list. The labware ID for the PCR plate is set as "Unknown" as well.***2025-02-23 02:00:18.400593+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "plate",
      "init_content": "",
      "labware": {"id": 2, "name": "PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in a tube and contains the initial content "sample DNAs".
2. water - It is used in a tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the tubes is set as "Unknown" since no specific ID and name are provided in the available labware list. The labware ID for the PCR plate is set as "Unknown" as well.***2025-02-23 02:00:18.402006+00:00***: Attempt 2 failed with error: Extra data: line 48 column 1 (char 1007)***2025-02-23 02:00:18.403753+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 48 column 1 (char 1007)
***2025-02-23 02:00:18.408342+00:00***: Retrying... (Attempt 2/10)***2025-02-23 02:00:24.901647+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "sample DNA",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNA",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 2, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items:

1. sample DNA - It is used in a 1.5 mL tube and contains the initial content "sample DNA".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:24.903661+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "sample DNA",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNA",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 2, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items:

1. sample DNA - It is used in a 1.5 mL tube and contains the initial content "sample DNA".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:24.904500+00:00***: Attempt 3 failed with error: Extra data: line 48 column 1 (char 1046)***2025-02-23 02:00:24.906100+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 48 column 1 (char 1046)
***2025-02-23 02:00:24.907224+00:00***: Retrying... (Attempt 3/10)***2025-02-23 02:00:32.478755+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "plate",
      "init_content": "",
      "labware": {"id": 2, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:32.481164+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "plate",
      "init_content": "",
      "labware": {"id": 2, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:32.482411+00:00***: Attempt 4 failed with error: Extra data: line 48 column 1 (char 1048)***2025-02-23 02:00:32.484470+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 48 column 1 (char 1048)
***2025-02-23 02:00:32.488698+00:00***: Retrying... (Attempt 4/10)***2025-02-23 02:00:42.105824+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 3, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the 1.5 mL tube and the 96 well PCR plate are set as "Unknown" since no specific ID and name are provided in the available labware list.***2025-02-23 02:00:42.108328+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 3, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items: 

1. 1 sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.

Note: The labware ID for the 1.5 mL tube and the 96 well PCR plate are set as "Unknown" since no specific ID and name are provided in the available labware list.***2025-02-23 02:00:42.109206+00:00***: Attempt 5 failed with error: Extra data: line 48 column 1 (char 1050)***2025-02-23 02:00:42.111198+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 48 column 1 (char 1050)
***2025-02-23 02:00:42.112232+00:00***: Retrying... (Attempt 5/10)***2025-02-23 02:00:51.322435+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 3, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items:

1. 1 sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:51.324643+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1 sample DNAs",
      "quantity": 300,
      "unit": "μL",
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "water",
      "quantity": 300,
      "unit": "μL",
      "init_content": "water",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_F",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_F",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "10 μM primer_R",
      "quantity": 10,
      "unit": "μL",
      "init_content": "10 μM primer_R",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "PCR MIX",
      "quantity": 2000,
      "unit": "μL",
      "init_content": "PCR MIX",
      "labware": {"id": 1, "name": "1.5 mL tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "unit": "piece",
      "init_content": "",
      "labware": {"id": 3, "name": "96 well PCR plate"}
    }
  ]
}

In this example, we have identified six different labware items:

1. 1 sample DNAs - It is used in a 1.5 mL tube and contains the initial content "sample DNAs".
2. water - It is used in a 1.5 mL tube and contains the initial content "water".
3. 10 μM primer_F - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_F".
4. 10 μM primer_R - It is used in a 1.5 mL tube and contains the initial content "10 μM primer_R".
5. PCR MIX - It is used in a 1.5 mL tube and contains the initial content "PCR MIX".
6. 96 well PCR plate - It is a 96-well PCR plate that starts empty.***2025-02-23 02:00:51.326308+00:00***: Attempt 6 failed with error: Extra data: line 48 column 1 (char 1050)***2025-02-23 02:00:51.331621+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 48 column 1 (char 1050)
***2025-02-23 02:00:51.337913+00:00***: Retrying... (Attempt 6/10)***2025-02-23 02:00:51.733045+00:00***: Attempt 7 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 17425 tokens. Please reduce the length of the messages.***2025-02-23 02:00:51.738312+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 17425 tokens. Please reduce the length of the messages.
***2025-02-23 02:00:51.739852+00:00***: Retrying... (Attempt 7/10)***2025-02-23 02:00:52.141471+00:00***: Attempt 8 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 19458 tokens. Please reduce the length of the messages.***2025-02-23 02:00:52.145462+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 19458 tokens. Please reduce the length of the messages.
***2025-02-23 02:00:52.146917+00:00***: Retrying... (Attempt 8/10)***2025-02-23 02:00:52.539827+00:00***: Attempt 9 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 21491 tokens. Please reduce the length of the messages.***2025-02-23 02:00:52.543089+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 21491 tokens. Please reduce the length of the messages.
***2025-02-23 02:00:52.544815+00:00***: Retrying... (Attempt 9/10)***2025-02-23 02:00:53.063319+00:00***: Attempt 10 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 23524 tokens. Please reduce the length of the messages.***2025-02-23 02:00:53.067154+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 23524 tokens. Please reduce the length of the messages.
***2025-02-23 02:00:53.068508+00:00***: Retrying... (Attempt 10/10)***2025-02-23 02:00:53.069042+00:00***: ******************************************************************************2025-02-23 02:00:53.069462+00:00***: Failed to extract object list after 10 attempts.***2025-02-23 02:00:53.069850+00:00***: ******************************************************************************2025-02-23 02:00:53.070510+00:00***: object_list_num: 0