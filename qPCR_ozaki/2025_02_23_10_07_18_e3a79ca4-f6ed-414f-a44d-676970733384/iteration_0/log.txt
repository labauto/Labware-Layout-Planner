***2025-02-23 01:07:18.254634+00:00***: os.path.join(BASE_DIR, f'{id}')='qPCR_ozaki/2025_02_23_10_07_18_e3a79ca4-f6ed-414f-a44d-676970733384/iteration_0'***2025-02-23 01:07:18.254997+00:00***: *********************** 2025_02_23_10_07_18_e3a79ca4-f6ed-414f-a44d-676970733384/iteration_0 *****************************2025-02-23 01:07:18.255929+00:00***: *********************************************************2025-02-23 01:07:22.877861+00:00***: obj-chan preprocess result:

{ "labware":
    [
        {"name": "1.5_ml_tube", "quantity": 1, "unit": "120", "init_content": "", "labware": {"id": 1, "name": "1.5 ml tube"}},
        {"name": "water_tube", "quantity": 1, "unit": "190", "init_content": "water", "labware": {"id": 2, "name": "1.5 ml tube"}},
        {"name": "primer_F_tube", "quantity": 13, "unit": "40", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5 ml tube"}},
        {"name": "primer_R_tube", "quantity": 13, "unit": "40", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5 ml tube"}},
        {"name": "PCR_MIX_tube", "quantity": 13, "unit": "240", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5 ml tube"}},
        {"name": "96_well_plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96 well PCR plate"}}
    ]
}

Explanation:

1. "1.5_ml_tube": 1 tube is used.
2. "water_tube": 1 tube is used, containing water as the initial content.
3. "primer_F_tube": 13 tubes are used, each containing 10 μM primer_F as the initial content.
4. "primer_R_tube": 13 tubes are used, each containing 10 μM primer_R as the initial content.
5. "PCR_MIX_tube": 13 tubes are used, each containing PCR MIX as the initial content.
6. "96_well_plate": 1 plate is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:22.878899+00:00***: obj-chan postprocess result:

{ "labware":
    [
        {"name": "1.5_ml_tube", "quantity": 1, "unit": "120", "init_content": "", "labware": {"id": 1, "name": "1.5 ml tube"}},
        {"name": "water_tube", "quantity": 1, "unit": "190", "init_content": "water", "labware": {"id": 2, "name": "1.5 ml tube"}},
        {"name": "primer_F_tube", "quantity": 13, "unit": "40", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5 ml tube"}},
        {"name": "primer_R_tube", "quantity": 13, "unit": "40", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5 ml tube"}},
        {"name": "PCR_MIX_tube", "quantity": 13, "unit": "240", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5 ml tube"}},
        {"name": "96_well_plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96 well PCR plate"}}
    ]
}

Explanation:

1. "1.5_ml_tube": 1 tube is used.
2. "water_tube": 1 tube is used, containing water as the initial content.
3. "primer_F_tube": 13 tubes are used, each containing 10 μM primer_F as the initial content.
4. "primer_R_tube": 13 tubes are used, each containing 10 μM primer_R as the initial content.
5. "PCR_MIX_tube": 13 tubes are used, each containing PCR MIX as the initial content.
6. "96_well_plate": 1 plate is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:22.879548+00:00***: Attempt 1 failed with error: Extra data: line 12 column 1 (char 845)***2025-02-23 01:07:22.882885+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 12 column 1 (char 845)
***2025-02-23 01:07:22.884333+00:00***: Retrying... (Attempt 1/10)***2025-02-23 01:07:29.444813+00:00***: obj-chan preprocess result:

{ "labware":
    [
        {"name": "1.5 ml tube sample", "quantity": 1, "unit": "300", "init_content": "sample DNAs", "labware": {"id": 1, "name": "1.5 ml tube"}},
        {"name": "1.5 ml tube water", "quantity": 1, "unit": "300", "init_content": "water", "labware": {"id": 2, "name": "1.5 ml tube"}},
        {"name": "10 μM primer_F tube", "quantity": 13, "unit": "10", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5 ml tube"}},
        {"name": "10 μM primer_R tube", "quantity": 13, "unit": "10", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5 ml tube"}},
        {"name": "PCR MIX tube", "quantity": 13, "unit": "2000", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5 ml tube"}},
        {"name": "96 well plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96 well PCR plate"}},
        {"name": "empty_15_ml_tube", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 7, "name": "15 ml tube"}}
    ]
}

Explanation:

1. "1.5 ml tube sample": 1 tube is used, containing 300 µL of sample DNAs as the initial content.
2. "1.5 ml tube water": 1 tube is used, containing 300 µL of water as the initial content.
3. "10 μM primer_F tube": 13 tubes are used, each containing 10 µL of 10 μM primer_F as the initial content.
4. "10 μM primer_R tube": 13 tubes are used, each containing 10 µL of 10 μM primer_R as the initial content.
5. "PCR MIX tube": 13 tubes are used, each containing 2000 µL of PCR MIX as the initial content.
6. "96 well plate": 1 plate is used.
7. "empty_15_ml_tube": 1 empty tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:29.446405+00:00***: obj-chan postprocess result:

{ "labware":
    [
        {"name": "1.5 ml tube sample", "quantity": 1, "unit": "300", "init_content": "sample DNAs", "labware": {"id": 1, "name": "1.5 ml tube"}},
        {"name": "1.5 ml tube water", "quantity": 1, "unit": "300", "init_content": "water", "labware": {"id": 2, "name": "1.5 ml tube"}},
        {"name": "10 μM primer_F tube", "quantity": 13, "unit": "10", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5 ml tube"}},
        {"name": "10 μM primer_R tube", "quantity": 13, "unit": "10", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5 ml tube"}},
        {"name": "PCR MIX tube", "quantity": 13, "unit": "2000", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5 ml tube"}},
        {"name": "96 well plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96 well PCR plate"}},
        {"name": "empty_15_ml_tube", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 7, "name": "15 ml tube"}}
    ]
}

Explanation:

1. "1.5 ml tube sample": 1 tube is used, containing 300 µL of sample DNAs as the initial content.
2. "1.5 ml tube water": 1 tube is used, containing 300 µL of water as the initial content.
3. "10 μM primer_F tube": 13 tubes are used, each containing 10 µL of 10 μM primer_F as the initial content.
4. "10 μM primer_R tube": 13 tubes are used, each containing 10 µL of 10 μM primer_R as the initial content.
5. "PCR MIX tube": 13 tubes are used, each containing 2000 µL of PCR MIX as the initial content.
6. "96 well plate": 1 plate is used.
7. "empty_15_ml_tube": 1 empty tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:29.446941+00:00***: Attempt 2 failed with error: Extra data: line 13 column 1 (char 1012)***2025-02-23 01:07:29.447776+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 13 column 1 (char 1012)
***2025-02-23 01:07:29.448187+00:00***: Retrying... (Attempt 2/10)***2025-02-23 01:07:34.742033+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "1 sample DNAs"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "water"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 3 * 13,
      "init_content": "10 μM primer_F"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 3 * 13,
      "init_content": "10 μM primer_R"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "PCR MIX"
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1
    },
    {
      "name": "15 ml tube",
      "quantity": 1
    }
  ]
}


Explanation:

1. "1.5 ml tube": 1 tube is used, containing 1 sample DNAs.
2. "1.5 ml tube": 1 tube is used, containing water.
3. "1.5 ml tube": 39 tubes are used (13 * 3), each containing a different 10 μM primer_F.
4. "1.5 ml tube": 39 tubes are used (13 * 3), each containing a different 10 μM primer_R.
5. "1.5 ml tube": 13 tubes are used, each containing PCR MIX.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:34.745249+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "1 sample DNAs"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "water"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 3 * 13,
      "init_content": "10 μM primer_F"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 3 * 13,
      "init_content": "10 μM primer_R"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "PCR MIX"
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1
    },
    {
      "name": "15 ml tube",
      "quantity": 1
    }
  ]
}


Explanation:

1. "1.5 ml tube": 1 tube is used, containing 1 sample DNAs.
2. "1.5 ml tube": 1 tube is used, containing water.
3. "1.5 ml tube": 39 tubes are used (13 * 3), each containing a different 10 μM primer_F.
4. "1.5 ml tube": 39 tubes are used (13 * 3), each containing a different 10 μM primer_R.
5. "1.5 ml tube": 13 tubes are used, each containing PCR MIX.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:34.746650+00:00***: Attempt 3 failed with error: Expecting ',' delimiter: line 15 column 21 (char 266)***2025-02-23 01:07:34.748348+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 354, in raw_decode
    obj, end = self.scan_once(s, idx)
               ^^^^^^^^^^^^^^^^^^^^^^
json.decoder.JSONDecodeError: Expecting ',' delimiter: line 15 column 21 (char 266)
***2025-02-23 01:07:34.749797+00:00***: Retrying... (Attempt 3/10)***2025-02-23 01:07:42.020350+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "sample DNAs"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "water"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "10 μM primer_F"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "10 μM primer_R"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "PCR MIX"
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1
    },
    {
      "name": "15 ml tube",
      "quantity": 1
    }
  ]
}


Explanation:

1. "1.5 ml tube": 1 tube is used, containing sample DNAs as the initial content.
2. "1.5 ml tube": 1 tube is used, containing water as the initial content.
3. "1.5 ml tube": 13 tubes are used, each containing a different 10 μM primer_F as the initial content.
4. "1.5 ml tube": 13 tubes are used, each containing a different 10 μM primer_R as the initial content.
5. "1.5 ml tube": 13 tubes are used, each containing PCR MIX as the initial content.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:42.022194+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "sample DNAs"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 1,
      "init_content": "water"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "10 μM primer_F"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "10 μM primer_R"
    },
    {
      "name": "1.5 ml tube",
      "quantity": 13,
      "init_content": "PCR MIX"
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1
    },
    {
      "name": "15 ml tube",
      "quantity": 1
    }
  ]
}


Explanation:

1. "1.5 ml tube": 1 tube is used, containing sample DNAs as the initial content.
2. "1.5 ml tube": 1 tube is used, containing water as the initial content.
3. "1.5 ml tube": 13 tubes are used, each containing a different 10 μM primer_F as the initial content.
4. "1.5 ml tube": 13 tubes are used, each containing a different 10 μM primer_R as the initial content.
5. "1.5 ml tube": 13 tubes are used, each containing PCR MIX as the initial content.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:42.023353+00:00***: Attempt 4 failed with error: Extra data: line 40 column 1 (char 647)***2025-02-23 01:07:42.025214+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 40 column 1 (char 647)
***2025-02-23 01:07:42.026124+00:00***: Retrying... (Attempt 4/10)***2025-02-23 01:07:50.834295+00:00***: obj-chan preprocess result:

{ "labware":
    [
        {"name": "1.5 ml tube sample", "quantity": 1, "unit": "300 μL", "init_content": "sample DNAs", "labware": {"id": 1, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube water", "quantity": 1, "unit": "300 μL", "init_content": "water", "labware": {"id": 2, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube primer_F", "quantity": 13, "unit": "10 μL", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube primer_R", "quantity": 13, "unit": "10 μL", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube PCR_MIX", "quantity": 13, "unit": "2000 μL", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5_ml_tube"}},
        {"name": "96 well PCR plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96_well_PCR_plate"}},
        {"name": "15 ml tube", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 7, "name": "15_ml_tube"}}
    ]
}

Explanation:

1. "1.5 ml tube sample": 1 tube is used, containing 300 μL of sample DNAs as the initial content.
2. "1.5 ml tube water": 1 tube is used, containing 300 μL of water as the initial content.
3. "1.5 ml tube primer_F": 13 tubes are used, each containing 10 μL of 10 μM primer_F as the initial content.
4. "1.5 ml tube primer_R": 13 tubes are used, each containing 10 μL of 10 μM primer_R as the initial content.
5. "1.5 ml tube PCR_MIX": 13 tubes are used, each containing 2000 μL of PCR MIX as the initial content.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:50.836033+00:00***: obj-chan postprocess result:

{ "labware":
    [
        {"name": "1.5 ml tube sample", "quantity": 1, "unit": "300 μL", "init_content": "sample DNAs", "labware": {"id": 1, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube water", "quantity": 1, "unit": "300 μL", "init_content": "water", "labware": {"id": 2, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube primer_F", "quantity": 13, "unit": "10 μL", "init_content": "10 μM primer_F", "labware": {"id": 3, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube primer_R", "quantity": 13, "unit": "10 μL", "init_content": "10 μM primer_R", "labware": {"id": 4, "name": "1.5_ml_tube"}},
        {"name": "1.5 ml tube PCR_MIX", "quantity": 13, "unit": "2000 μL", "init_content": "PCR MIX", "labware": {"id": 5, "name": "1.5_ml_tube"}},
        {"name": "96 well PCR plate", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 6, "name": "96_well_PCR_plate"}},
        {"name": "15 ml tube", "quantity": 1, "unit": "", "init_content": "", "labware": {"id": 7, "name": "15_ml_tube"}}
    ]
}

Explanation:

1. "1.5 ml tube sample": 1 tube is used, containing 300 μL of sample DNAs as the initial content.
2. "1.5 ml tube water": 1 tube is used, containing 300 μL of water as the initial content.
3. "1.5 ml tube primer_F": 13 tubes are used, each containing 10 μL of 10 μM primer_F as the initial content.
4. "1.5 ml tube primer_R": 13 tubes are used, each containing 10 μL of 10 μM primer_R as the initial content.
5. "1.5 ml tube PCR_MIX": 13 tubes are used, each containing 2000 μL of PCR MIX as the initial content.
6. "96 well PCR plate": 1 plate is used.
7. "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:50.836697+00:00***: Attempt 5 failed with error: Extra data: line 13 column 1 (char 1034)***2025-02-23 01:07:50.837582+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 13 column 1 (char 1034)
***2025-02-23 01:07:50.837924+00:00***: Retrying... (Attempt 5/10)***2025-02-23 01:07:59.734873+00:00***: obj-chan preprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube sample",
      "quantity": 1,
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube water",
      "quantity": 1,
      "init_content": "water",
      "labware": {"id": 2, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube primer_F",
      "quantity": 13,
      "init_content": "10 μM primer_F",
      "labware": {"id": 3, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube primer_R",
      "quantity": 13,
      "init_content": "10 μM primer_R",
      "labware": {"id": 4, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube PCR_MIX",
      "quantity": 13,
      "init_content": "PCR MIX",
      "labware": {"id": 5, "name": "1.5 ml tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "labware": {"id": 6, "name": "96 well PCR plate"}
    },
    {
      "name": "15 ml tube",
      "quantity": 1,
      "labware": {"id": 7, "name": "15 ml tube"}
    }
  ]
}


Explanation:
- "1.5 ml tube sample": 1.5 ml tube is used, with the initial content of "sample DNAs".
- "1.5 ml tube water": 1.5 ml tube is used, with the initial content of "water".
- "1.5 ml tube primer_F": 13 1.5 ml tubes are used, each with the initial content of "10 μM primer_F".
- "1.5 ml tube primer_R": 13 1.5 ml tubes are used, each with the initial content of "10 μM primer_R".
- "1.5 ml tube PCR_MIX": 13 1.5 ml tubes are used, each with the initial content of "PCR MIX".
- "96 well PCR plate": 1 plate is used.
- "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:59.736801+00:00***: obj-chan postprocess result:

{
  "labware": [
    {
      "name": "1.5 ml tube sample",
      "quantity": 1,
      "init_content": "sample DNAs",
      "labware": {"id": 1, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube water",
      "quantity": 1,
      "init_content": "water",
      "labware": {"id": 2, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube primer_F",
      "quantity": 13,
      "init_content": "10 μM primer_F",
      "labware": {"id": 3, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube primer_R",
      "quantity": 13,
      "init_content": "10 μM primer_R",
      "labware": {"id": 4, "name": "1.5 ml tube"}
    },
    {
      "name": "1.5 ml tube PCR_MIX",
      "quantity": 13,
      "init_content": "PCR MIX",
      "labware": {"id": 5, "name": "1.5 ml tube"}
    },
    {
      "name": "96 well PCR plate",
      "quantity": 1,
      "labware": {"id": 6, "name": "96 well PCR plate"}
    },
    {
      "name": "15 ml tube",
      "quantity": 1,
      "labware": {"id": 7, "name": "15 ml tube"}
    }
  ]
}


Explanation:
- "1.5 ml tube sample": 1.5 ml tube is used, with the initial content of "sample DNAs".
- "1.5 ml tube water": 1.5 ml tube is used, with the initial content of "water".
- "1.5 ml tube primer_F": 13 1.5 ml tubes are used, each with the initial content of "10 μM primer_F".
- "1.5 ml tube primer_R": 13 1.5 ml tubes are used, each with the initial content of "10 μM primer_R".
- "1.5 ml tube PCR_MIX": 13 1.5 ml tubes are used, each with the initial content of "PCR MIX".
- "96 well PCR plate": 1 plate is used.
- "15 ml tube": 1 tube is used.

Please note that the labware ID and name are arbitrary in this response. You may assign different numbers and names in your implementation.***2025-02-23 01:07:59.738497+00:00***: Attempt 6 failed with error: Extra data: line 47 column 1 (char 1048)***2025-02-23 01:07:59.740330+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 47 column 1 (char 1048)
***2025-02-23 01:07:59.741021+00:00***: Retrying... (Attempt 6/10)***2025-02-23 01:08:00.051982+00:00***: Attempt 7 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 17186 tokens. Please reduce the length of the messages.***2025-02-23 01:08:00.054310+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 17186 tokens. Please reduce the length of the messages.
***2025-02-23 01:08:00.054940+00:00***: Retrying... (Attempt 7/10)***2025-02-23 01:08:00.394929+00:00***: Attempt 8 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 19219 tokens. Please reduce the length of the messages.***2025-02-23 01:08:00.397723+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 19219 tokens. Please reduce the length of the messages.
***2025-02-23 01:08:00.399094+00:00***: Retrying... (Attempt 8/10)***2025-02-23 01:08:00.708588+00:00***: Attempt 9 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 21252 tokens. Please reduce the length of the messages.***2025-02-23 01:08:00.713099+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 21252 tokens. Please reduce the length of the messages.
***2025-02-23 01:08:00.723440+00:00***: Retrying... (Attempt 9/10)***2025-02-23 01:08:01.169343+00:00***: Attempt 10 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 23285 tokens. Please reduce the length of the messages.***2025-02-23 01:08:01.173148+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 23285 tokens. Please reduce the length of the messages.
***2025-02-23 01:08:01.174485+00:00***: Retrying... (Attempt 10/10)***2025-02-23 01:08:01.174992+00:00***: ******************************************************************************2025-02-23 01:08:01.175366+00:00***: Failed to extract object list after 10 attempts.***2025-02-23 01:08:01.175713+00:00***: ******************************************************************************2025-02-23 01:08:01.176158+00:00***: object_list_num: 0