
We have the following Opentrons OT2 script. This script describes the position of the labware (Station) as __place_{i}__.

Note: You've been slacking lately, so don't slack off and output the complete code. For example, ‘The protocol would continue with any additional steps required’ or '# Example: ' is not allowed.

Skeleton script:

python
from opentrons import protocol_api

metadata = {
    'protocolName': 'QPCR Sample Preparation for QuantStudio 6 Pro',
    'author': 'Your Name',
    'description': 'Prepare QPCR samples with one sample DNA, 13 primers, and NTCs in 96 well plate',
    'apiLevel': '2.9'  # Specify the API level for this code
}

def run(protocol: protocol_api.ProtocolContext):

    # Labware
    tip_rack_20 = protocol.load_labware('opentrons_96_tiprack_20ul', '__place_1__')
    tip_rack_300 = protocol.load_labware('opentrons_96_tiprack_300ul', '__place_2__')

    p20 = protocol.load_instrument('p20_single_gen2', 'left', tip_racks=[tip_rack_20])
    p300 = protocol.load_instrument('p300_single_gen2', 'right', tip_racks=[tip_rack_300])

    # PCR plate for the reaction
    pcr_plate = protocol.load_labware('biorad_96_wellplate_200ul_pcr', '__place_3__')

    # Reagent plate (deep well plate) for reagents and mixtures
    reagent_plate = protocol.load_labware('nest_96_wellplate_2ml_deep', '__place_4__')

    # Sample DNA tube
    sample_dna = reagent_plate.wells_by_name()['A1']

    # Water tube
    water = reagent_plate.wells_by_name()['A2']

    # PCR MIX stock
    pcr_mix_stock = reagent_plate.wells_by_name()['A3']

    # Primers (we will use columns 1-13 for primer_F and columns 14-26 for primer_R)
    primer_f_wells = reagent_plate.rows_by_name()['B'][:13]  # B1 to B13
    primer_r_wells = reagent_plate.rows_by_name()['C'][:13]  # C1 to C13

    # Tubes for PCR MIX + primers mixtures (we will use wells D1 to D13)
    pcr_mix_primers = reagent_plate.rows_by_name()['D'][:13]

    # Tube for PCR MIX + water (template-only control)
    pcr_mix_water = reagent_plate.wells_by_name()['A4']

    # Step 1: Aliquot 137.6 μL of PCR MIX into 13 tubes
    for dest in pcr_mix_primers:
        p300.pick_up_tip()
        p300.transfer(137.6, pcr_mix_stock, dest, new_tip='never')
        p300.drop_tip()

    # Step 2: Add 3.2 μL of primer_F1-13 to each PCR MIX tube
    for primer_f, dest in zip(primer_f_wells, pcr_mix_primers):
        p20.pick_up_tip()
        p20.transfer(3.2, primer_f, dest, new_tip='never', mix_after=(3, 20))
        p20.drop_tip()

    # Step 3: Add 3.2 μL of primer_R1-13 to each PCR MIX tube
    for primer_r, dest in zip(primer_r_wells, pcr_mix_primers):
        p20.pick_up_tip()
        p20.transfer(3.2, primer_r, dest, new_tip='never', mix_after=(3, 20))
        p20.drop_tip()

    # Step 4: Mix PCR MIX and primers by pipetting (already mixed in previous steps)

    # Step 5: Aliquot 86 μL of PCR MIX into tube for template-only
    p300.pick_up_tip()
    p300.transfer(86, pcr_mix_stock, pcr_mix_water, new_tip='never')
    p300.drop_tip()

    # Step 6: Add 4 μL of water to the PCR MIX for template-only
    p20.pick_up_tip()
    p20.transfer(4, water, pcr_mix_water, new_tip='never', mix_after=(3, 20))
    p20.drop_tip()

    # Step 7: Mix PCR MIX and water by pipetting (already mixed)

    # Step 8: Apply 5 μL of sample DNA or water to reaction plate
    # Define the columns for samples and NTCs
    sample_columns = [1, 2, 3]
    ntc_columns = [4, 5, 6]
    template_only_columns = [7, 8, 9]

    # Dispense sample DNA into sample wells
    sample_wells = []
    for col in sample_columns:
        for row in 'ABCDEFGH'[:13]:
            well_name = row + str(col)
            sample_wells.append(pcr_plate.wells_by_name()[well_name])

    p20.pick_up_tip()
    for well in sample_wells:
        p20.transfer(5, sample_dna, well, new_tip='never')
    p20.drop_tip()

    # Dispense water into NTC wells
    ntc_wells = []
    for col in ntc_columns:
        for row in 'ABCDEFGH'[:13]:
            well_name = row + str(col)
            ntc_wells.append(pcr_plate.wells_by_name()[well_name])

    p20.pick_up_tip()
    for well in ntc_wells:
        p20.transfer(5, water, well, new_tip='never')
    p20.drop_tip()

    # Dispense sample DNA into template-only wells (no primers)
    template_only_wells = []
    for col in template_only_columns:
        for row in ['A', 'B', 'C']:
            well_name = row + str(col)
            template_only_wells.append(pcr_plate.wells_by_name()[well_name])

    p20.pick_up_tip()
    for well in template_only_wells:
        p20.transfer(5, sample_dna, well, new_tip='never')
    p20.drop_tip()

    # Step 9: Apply 10 μL of PCR MIX + primers to reaction plate
    primer_rows = 'ABCDEFGH'[:13]

    for idx, row in enumerate(primer_rows):
        mix_source = pcr_mix_primers[idx]

        # Dispense to sample wells
        for col in sample_columns:
            dest_well = pcr_plate.wells_by_name()[row + str(col)]
            p20.pick_up_tip()
            p20.transfer(10, mix_source, dest_well, new_tip='never')
            p20.drop_tip()

        # Dispense to NTC wells
        for col in ntc_columns:
            dest_well = pcr_plate.wells_by_name()[row + str(col)]
            p20.pick_up_tip()
            p20.transfer(10, mix_source, dest_well, new_tip='never')
            p20.drop_tip()

    # Dispense PCR MIX + water to template-only wells
    for well in template_only_wells:
        p20.pick_up_tip()
        p20.transfer(10, pcr_mix_water, well, new_tip='never')
        p20.drop_tip()

Please generate a script where __place_{i}__ is replaced with the correct position based on the following labware placement information.

Placement information:

markdown
[[[{"name": "1_sample_DNAs", "quantity": 300, "init_content": "sample DNA, primer, PCR MIX mixture", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 1], [[{"name": "water", "quantity": 300, "init_content": "water", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 2], [[{"name": "10_\u03bcM_primer_F", "quantity": 10, "init_content": "primer", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 3], [[{"name": "10_\u03bcM_primer_R", "quantity": 10, "init_content": "primer", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 4], [[{"name": "PCR_MIX", "quantity": 2000, "init_content": "PCR MIX", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 5], [[{"name": "96_well_PCR_plate", "quantity": 1, "init_content": "", "labware": {"id": "", "name": ""}, "unit": "plate"}, []], 6], [[{"name": "template_only_PCR_MIX", "quantity": 86, "init_content": "PCR MIX", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 7], [[{"name": "water_for_template_only_PCR_MIX", "quantity": 4, "init_content": "water", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 10], [[{"name": "reaction_plate", "quantity": 5, "init_content": "", "labware": {"id": "", "name": ""}, "unit": "\u03bcL"}, []], 9]]
Please reply with the Python script where __place_{i}__ has been replaced with the correct locations. If there is missing information in the placement details required to fill in __place_{i}__ in the skeleton script, you may supplement it as necessary. However, do not modify the placement information.
