***2025-02-22 15:51:24.743369+00:00***: os.path.join(BASE_DIR, f'{id}')='qPCR_ozaki/82ef653d-95dd-406f-9e6c-bb355a43e58b/iteration_3'***2025-02-22 15:51:24.746601+00:00***: *********************** 82ef653d-95dd-406f-9e6c-bb355a43e58b/iteration_3 *****************************2025-02-22 15:51:24.746947+00:00***: *********************************************************2025-02-22 15:51:29.909951+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "sample DNA",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F1-13",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F1-13",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R1-13",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R1-13",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_pcr_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:29.912266+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "sample DNA",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F1-13",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F1-13",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R1-13",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R1-13",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_pcr_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:29.913803+00:00***: Attempt 1 failed with error: Extra data: line 70 column 1 (char 1843)***2025-02-22 15:51:29.917023+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1843)
***2025-02-22 15:51:29.920645+00:00***: Retrying... (Attempt 1/10)***2025-02-22 15:51:36.439047+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_pcr_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:36.440572+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_pcr_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:36.441436+00:00***: Attempt 2 failed with error: Extra data: line 70 column 1 (char 1831)***2025-02-22 15:51:36.442692+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1831)
***2025-02-22 15:51:36.443376+00:00***: Retrying... (Attempt 2/10)***2025-02-22 15:51:42.603432+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_PCR_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:42.604327+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 1, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 2, "name": "96_well_PCR_plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 4, "name": "reaction_plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:42.604911+00:00***: Attempt 3 failed with error: Extra data: line 70 column 1 (char 1830)***2025-02-22 15:51:42.605726+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1830)
***2025-02-22 15:51:42.606349+00:00***: Retrying... (Attempt 3/10)***2025-02-22 15:51:49.118048+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 4, "name": "plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 6, "name": "plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:49.120332+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNA",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 4, "name": "plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 6, "name": "plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:49.121456+00:00***: Attempt 4 failed with error: Extra data: line 70 column 1 (char 1788)***2025-02-22 15:51:49.123226+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1788)
***2025-02-22 15:51:49.123984+00:00***: Retrying... (Attempt 4/10)***2025-02-22 15:51:56.416970+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 4, "name": "plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 6, "name": "plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:56.419439+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "1 sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_F",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "10 μM primer_R",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 3, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 4, "name": "plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 5, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 6, "name": "plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:51:56.421352+00:00***: Attempt 5 failed with error: Extra data: line 70 column 1 (char 1817)***2025-02-22 15:51:56.423542+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1817)
***2025-02-22 15:51:56.426097+00:00***: Retrying... (Attempt 5/10)***2025-02-22 15:52:05.601972+00:00***: obj-chan preprocess result:

{
    "labware": [
        {
            "name": "sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "primer_F",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "primer_R",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 3, "name": "96 well PCR plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 4, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 4, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 5, "name": "reaction plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:52:05.603354+00:00***: obj-chan postprocess result:

{
    "labware": [
        {
            "name": "sample DNAs",
            "quantity": 300,
            "unit": "μL",
            "init_content": "sample DNAs",
            "labware": {"id": 1, "name": "1.5 ml tube"}
        },
        {
            "name": "water",
            "quantity": 300,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_F",
            "quantity": 10,
            "unit": "μL",
            "init_content": "primer_F",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "10 μM primer_R",
            "quantity": 10,
            "unit": "μL",
            "init_content": "primer_R",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "PCR MIX",
            "quantity": 2000,
            "unit": "μL",
            "init_content": "PCR MIX",
            "labware": {"id": 2, "name": "tube"}
        },
        {
            "name": "96 well PCR plate",
            "quantity": 1,
            "unit": "",
            "init_content": "",
            "labware": {"id": 3, "name": "96 well PCR plate"}
        },
        {
            "name": "template",
            "quantity": 86,
            "unit": "μL",
            "init_content": "template",
            "labware": {"id": 4, "name": "tube"}
        },
        {
            "name": "water",
            "quantity": 4,
            "unit": "μL",
            "init_content": "water",
            "labware": {"id": 4, "name": "tube"}
        },
        {
            "name": "reaction plate",
            "quantity": 5,
            "unit": "μL",
            "init_content": "",
            "labware": {"id": 5, "name": "reaction plate"}
        }
    ]
}


Note: The labware ID and name values in the output are randomly generated.***2025-02-22 15:52:05.604102+00:00***: Attempt 6 failed with error: Extra data: line 70 column 1 (char 1824)***2025-02-22 15:52:05.605776+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 252, in get_object_list
    results = _extract_results_from_gpt_response(answer, log_file_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 135, in _extract_results_from_gpt_response
    results = text_to_dict(result.replace('extracted_results:', '').replace('extracted_results_end:', '').strip())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 134, in <lambda>
    text_to_dict = lambda x: json.loads(x.replace('\'', '\"'))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.12/3.12.8/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py", line 341, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 70 column 1 (char 1824)
***2025-02-22 15:52:05.606272+00:00***: Retrying... (Attempt 6/10)***2025-02-22 15:52:05.941973+00:00***: Attempt 7 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 17157 tokens. Please reduce the length of the messages.***2025-02-22 15:52:05.944705+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 17157 tokens. Please reduce the length of the messages.
***2025-02-22 15:52:05.945714+00:00***: Retrying... (Attempt 7/10)***2025-02-22 15:52:06.318302+00:00***: Attempt 8 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 19190 tokens. Please reduce the length of the messages.***2025-02-22 15:52:06.319971+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 19190 tokens. Please reduce the length of the messages.
***2025-02-22 15:52:06.320776+00:00***: Retrying... (Attempt 8/10)***2025-02-22 15:52:06.750150+00:00***: Attempt 9 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 21223 tokens. Please reduce the length of the messages.***2025-02-22 15:52:06.752600+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 21223 tokens. Please reduce the length of the messages.
***2025-02-22 15:52:06.753923+00:00***: Retrying... (Attempt 9/10)***2025-02-22 15:52:07.198259+00:00***: Attempt 10 failed with error: This model's maximum context length is 16385 tokens. However, your messages resulted in 23256 tokens. Please reduce the length of the messages.***2025-02-22 15:52:07.200208+00:00***: Traceback: Traceback (most recent call last):
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/functions.py", line 45, in get_object_list
    object_list, obj_chan_errors = obj_chan(
                                   ^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 265, in run
    res, errors = get_object_list(process_flow, constraints, messages, log_file_path=log_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/src/formationformatter/obj_chan/__init__.py", line 245, in get_object_list
    res = openai.ChatCompletion.create(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
                           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/Users/yuyaarai/Documents/Humanics/Project/FormationFormatter/.venv/lib/python3.12/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: This model's maximum context length is 16385 tokens. However, your messages resulted in 23256 tokens. Please reduce the length of the messages.
***2025-02-22 15:52:07.200882+00:00***: Retrying... (Attempt 10/10)***2025-02-22 15:52:07.201304+00:00***: ******************************************************************************2025-02-22 15:52:07.201793+00:00***: Failed to extract object list after 10 attempts.***2025-02-22 15:52:07.202223+00:00***: ******************************************************************************2025-02-22 15:52:07.202670+00:00***: object_list_num: 0