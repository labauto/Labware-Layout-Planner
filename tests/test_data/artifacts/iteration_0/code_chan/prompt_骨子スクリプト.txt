
I want to write a Python script that runs the Opentrons OT2 machine. This robot can be used to automate laboratory experiments and is widely used by many researchers in biology.

Can you write a Python script for the following experiment?
However, please replace the position of the objects with __place_{i}__ and store the object and position pair like this: {{"__place_{i}__": "{obj}"}}.

For example, for this script:

```python
from opentrons import protocol_api

metadata = {
    'protocolName': 'Liquid transfer across multiple labware',
    'author': 'Your Name',
    'description': 'Transfer liquid from one 96-well plate to another 96-well plate and a 12-well plate',
    'apiLevel': '2.9'  # Specify the API level for this code
}

def run(protocol: protocol_api.ProtocolContext):
    # Set up labware
    tip_rack1 = protocol.load_labware('opentrons_96_tiprack_300ul', 1)
    tip_rack2 = protocol.load_labware('opentrons_96_tiprack_300ul',  2)  # Second tip rack
    plate_source_96 = protocol.load_labware('corning_96_wellplate_360ul_flat', 3)
    plate_destination_96 = protocol.load_labware('corning_96_wellplate_360ul_flat',  4)
    plate_destination_12 = protocol.load_labware('corning_12_wellplate_6.9ml_flat',  5)

    # Set up pipette
    pipette = protocol.load_instrument('p300_single', 'right', tip_racks=[tip_rack1, tip_rack2])  # Specify two tip racks
    pass
You should replace the positions of the objects with __place_1__, __place_2__, __place_3__, __place_4__, and __place_5__ like this:

```python
from opentrons import protocol_api

metadata = {
    'protocolName': 'Liquid transfer across multiple labware',
    'author': 'Your Name',
    'description': 'Transfer liquid from one 96-well plate to another 96-well plate and a 12-well plate',
    'apiLevel': '2.9'  # Specify the API level for this code
}

def run(protocol: protocol_api.ProtocolContext):
    # Set up labware
    tip_rack1 = protocol.load_labware('opentrons_96_tiprack_300ul', '__place_1__')
    tip_rack2 = protocol.load_labware('opentrons_96_tiprack_300ul', '__place_2__')  # Second tip rack
    plate_source_96 = protocol.load_labware('corning_96_wellplate_360ul_flat', '__place_3__')
    plate_destination_96 = protocol.load_labware('corning_96_wellplate_360ul_flat', '__place_4__')
    plate_destination_12 = protocol.load_labware('corning_12_wellplate_6.9ml_flat', '__place_5__')

    # Set up pipette
    pipette = protocol.load_instrument('p300_single', 'right', tip_racks=[tip_rack1, tip_rack2])  # Specify two tip racks
    pass
```


And please provide the object and position pairs like this:

```json
{"__place_1__": "{obj1}", "__place_2__": "{obj2}", "__place_3__": "{obj3}", "__place_4__": "{obj4}", "__place_5__": "{obj5}"}
So, your output should include:
```

The template Python script
The object and position pairs
Here is the process flow of the experiment: 
QPCR
Sample prep for measurement using the QuantStudio 6 Pro.
There are 11 samples, and the plan is to test each with 4 primers, each in duplicate.

Input:

Containers for reagents: tubes or plates
11 sample DNAs: 50 μL each
Water: 50 μL
10 μM primer_F: 50 μL
10 μM primer_R: 50 μL
PCR MIX: 1000 μL
96-well PCR plate: 1 plate
Other necessary tubes or plates for liquid mixing
Output:
A 96-well PCR plate containing a mixture of sample DNA, primer, and PCR MIX.

Procedure:

Dispense 221 μL of PCR MIX into 4 separate tubes.
Add 19.5 μL of 10 μM primer_F1-4 to the tubes with PCR MIX.
Add 19.5 μL of 10 μM primer_R1-4 to the tubes with PCR MIX.
Mix the PCR MIX and primers by pipetting.
Apply 5 μL of sample DNA or water to the reaction plate, filling the columns as shown in the plate map below.
Apply 10 μL of the PCR MIX and primer mixture to the reaction plate, filling the rows as shown in the plate map below.
Plate Map: All 96 wells will be used.

S_n = sample_n (There are 11 types of samples this time, from 1 to 11).
NTC = no template control: water = negative control.
P_m = primer set_m: a set of forward and reverse primers. This time, there are 4 sets.
    
